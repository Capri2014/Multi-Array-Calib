function [ sensorData ] = EasyScale( sensorData, rotVec, rotVar, tranVec )

%divide into camera and non-camera sensors
nonCamData = {};
nonCamIdx = {};
camData = {};
camIdx = {};

for i = 1:length(sensorData)
    if(strcmp(sensorData{i}.type,'camera'))
        camData = [camData,sensorData{i}];
        camIdx = [camIdx,i];
    else
        nonCamData = [nonCamData,sensorData{i}];
        nonCamIdx = [nonCamIdx,i];
    end
end

for i = 1:length(camData)
    
    scale = ones(size(camData{i}.T_Skm1_Sk,1),1);
    
    %get joint rotation
    samples = 100;
    R = zeros(3,length(nonCamData),samples);
    for k = 1:length(nonCamData)
        for j = 1:100
            R(:,k,j) = R2V(V2R(rotVec(camIdx{i},:)+randn(1,3).*rotVar(camIdx{i},:))/V2R(rotVec(nonCamIdx{k},:)+randn(1,3).*rotVar(nonCamIdx{k},:)));
        end
    end
    VR = var(R,[],3)';
    R = mean(R,3)';
    
    [tA,vtA] = ts2t(nonCamData{1}.T_Skm1_Sk(:,1:4), nonCamData{1}.T_Var_Skm1_Sk(:,1:4));
    [tB,vtB] = ts2t([camData{i}.T_Skm1_Sk(:,1:3),ones(size(, camData{i}.T_Var_Skm1_Sk(:,1:4));
    tA = tA'; vtA = vtA';
    tB = tB'; vtB = vtB';

    RA = sensorData{a}.T_Skm1_Sk(:,5:7)';
    vRA = sensorData{a}.T_Var_Skm1_Sk(:,5:7)';
    RB = sensorData{b}.T_Skm1_Sk(:,5:7)';
    vRB = sensorData{b}.T_Var_Skm1_Sk(:,5:7)';
       
    for j = 1:size(camData{i}.T_Skm1_Sk,1)
        

         
    end
    
%     sV = ((sV - repmat(s,1,11)).^2)./(diff.^2);
%     sV = sum(sV,2);
    
    s(1) = 0;
    s(end) = 0;
    sensorData{camIdx{i}}.T_Var_Skm1_Sk(:,4) = s.*abs(sensorData{camIdx{i}}.T_Var_Skm1_Sk(:,4));
    sensorData{camIdx{i}}.T_Skm1_Sk(:,4) = s.*sensorData{camIdx{i}}.T_Skm1_Sk(:,4);
end

warning('on','MATLAB:nearlySingularMatrix');

end